<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snxy.business.dao.mapper.OnlineUserMapper">
  <resultMap id="BaseResultMap" type="com.snxy.business.domain.OnlineUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="system_user_id" jdbcType="BIGINT" property="systemUserId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, system_user_id, user_name, phone, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from online_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from online_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.snxy.business.domain.OnlineUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into online_user (system_user_id, company_type, is_responsible,
      user_name, phone, is_delete
      )
    values (#{systemUserId,jdbcType=BIGINT}, #{companyType,jdbcType=INTEGER}, #{isResponsible,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.snxy.business.domain.OnlineUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into online_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="systemUserId != null">
        system_user_id,
      </if>
      <if test="companyType != null">
        company_type,
      </if>
      <if test="isResponsible != null">
        is_responsible,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="systemUserId != null">
        #{systemUserId,jdbcType=BIGINT},
      </if>
      <if test="companyType != null">
        #{companyType,jdbcType=INTEGER},
      </if>
      <if test="isResponsible != null">
        #{isResponsible,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.snxy.business.domain.OnlineUser">
    update online_user
    <set>
      <if test="systemUserId != null">
        system_user_id = #{systemUserId,jdbcType=BIGINT},
      </if>
      <if test="companyType != null">
        company_type = #{companyType,jdbcType=INTEGER},
      </if>
      <if test="isResponsible != null">
        is_responsible = #{isResponsible,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snxy.business.domain.OnlineUser">
    update online_user
    set system_user_id = #{systemUserId,jdbcType=BIGINT},
      company_type = #{companyType,jdbcType=INTEGER},
      is_responsible = #{isResponsible,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectIdBySystemUserID" resultType="java.lang.Long">
    select id
        from
        online_user
         where
         system_user_id=#{SystemUserId}
  </select>



  <!--添加用户名字W-->
  <update id="updateNameBySystemUserId">
    update online_user
    set user_name = #{name}
    where system_user_id = #{systemUserId}
    and is_delete = 0
  </update>

  <!--通过手机号查询onlineUser-->
  <select id="selectByPhone" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from online_user
    where phone = #{phone}
  </select>

  <!--添加onlineUser-->
  <insert id="insertOnlineUser" parameterType="com.snxy.business.domain.OnlineUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into online_user (system_user_id,user_name, phone)
    values (#{systemUserId}, #{userName}, #{phone})
  </insert>

  <select id="selectByPhoneList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from online_user
    where phone in
    <foreach collection="phoneList" index="index" item="phone" open="(" separator="," close=")">
      #{phone}
    </foreach>
    AND is_delete = 0
  </select>

  <!--批量添加onlineUser-->
  <insert id="insertOnlineUserList" useGeneratedKeys="true" keyProperty="id">
    <!--<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">-->
      <!--SELECT LAST_INSERT_ID()-->
    <!--</selectKey>-->
    insert into online_user (system_user_id, user_name, phone)
    values
    <foreach collection="list" item="onlineUser" separator=",">
      (#{onlineUser.systemUserId}, #{onlineUser.userName}, #{onlineUser.phone})
    </foreach>
  </insert>

  <!--查询所有公司员工-->
  <select id="selectByOnlineUserIdList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from online_user
    where id IN
    <foreach collection="onlineUserIdList" index="index" item="onlineUserId" open="(" separator="," close=")">
      #{onlineUserId}
    </foreach>
  </select>

  <!--修改在线用户手机号-->
  <update id="updateOnlineMobile" >
    update online_user
    set phone = #{mobile}
    where id = #{onlineUserId}
    and is_delete = 0
  </update>
<<<<<<< HEAD

=======
<!--根据系统id获取onlineUserId-->
  <select id="selectOnlineUserIdBySystemUserId" parameterType="java.lang.Long" resultType="java.lang.Long">
    select
    id
    from online_user
    where system_user_id = #{systemUserId,jdbcType=BIGINT}
  </select>
>>>>>>> 62edd728285d2aa4c16204f202c089085c3cd533
</mapper>