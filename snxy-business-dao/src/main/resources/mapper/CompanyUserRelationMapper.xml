<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snxy.business.dao.mapper.CompanyUserRelationMapper">
  <resultMap id="BaseResultMap" type="com.snxy.business.domain.CompanyUserRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="online_user_id" jdbcType="BIGINT" property="onlineUserId" />
    <result column="is_responsible" jdbcType="INTEGER" property="isResponsible" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modifed" jdbcType="TIMESTAMP" property="gmtModifed" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="is_founder" jdbcType="INTEGER" property="isFounder" />
  </resultMap>
  <sql id="Base_Column_List">
    id, company_id, online_user_id, is_responsible, gmt_create, gmt_modifed, is_delete, is_founder
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company_user_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from company_user_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <!--商户负责人完善公司信息绑定-->
  <insert id="insert" parameterType="com.snxy.business.domain.CompanyUserRelation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company_user_relation (company_id, online_user_id, is_responsible,
      gmt_create, gmt_modifed)
    values (#{companyId}, #{onlineUserId}, #{isResponsible},
      #{gmtCreate}, #{gmtModifed})
  </insert>
  <insert id="insertSelective" parameterType="com.snxy.business.domain.CompanyUserRelation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company_user_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="onlineUserId != null">
        online_user_id,
      </if>
      <if test="isResponsible != null">
        is_responsible,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModifed != null">
        gmt_modifed,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="onlineUserId != null">
        #{onlineUserId,jdbcType=BIGINT},
      </if>
      <if test="isResponsible != null">
        #{isResponsible,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModifed != null">
        #{gmtModifed,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.snxy.business.domain.CompanyUserRelation">
    update company_user_relation
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="onlineUserId != null">
        online_user_id = #{onlineUserId,jdbcType=BIGINT},
      </if>
      <if test="isResponsible != null">
        is_responsible = #{isResponsible,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModifed != null">
        gmt_modifed = #{gmtModifed,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snxy.business.domain.CompanyUserRelation">
    update company_user_relation
    set company_id = #{companyId,jdbcType=BIGINT},
      online_user_id = #{onlineUserId,jdbcType=BIGINT},
      is_responsible = #{isResponsible,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modifed = #{gmtModifed,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--更改公司负责人-->
  <update id="changePrinciple">
    update company_user_relation
    set is_responsible = #{isResponsible}
    where company_id = #{companyId}
    AND is_delete = 0
    and online_user_id = #{onlineUserId}
  </update>

  <!--添加公司员工-->
  <insert id="insertCompanyRelation" parameterType="com.snxy.business.domain.CompanyUserRelation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company_user_relation (company_id, online_user_id, is_responsible,
    gmt_create)
    values (#{companyId}, #{onlineUserId}, #{isResponsible},
    #{gmtCreate})
  </insert>

  <!--查询通过onlineUserId-->
  <select id="selectByOnlineUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company_user_relation
    where online_user_id = #{id}



    AND is_delete = 0

  </select>

  <!--批量添加公司员工-->
  <insert id="insertCompanyRelationList" useGeneratedKeys="true" keyProperty="id">
    <!--<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">-->
      <!--SELECT LAST_INSERT_ID()-->
    <!--</selectKey>-->
    insert into company_user_relation (company_id, online_user_id, is_responsible,
    gmt_create)
    values
    <foreach collection="list" item="companyUserRelation" separator=",">
      (#{companyUserRelation.companyId}, #{companyUserRelation.onlineUserId}, #{companyUserRelation.isResponsible},
      #{companyUserRelation.gmtCreate})
    </foreach>
  </insert>

  <!--查询公司所有员工-->
  <select id="selectAllByCompanyId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from company_user_relation
    where company_id = #{companyId}
    and is_delete = 0
  </select>

  <!--批量修改员工负责人状态-->
  <update id="updateByCompanyUserRelationList"  parameterType="java.util.List">
    <foreach collection="companyUserRelationList" item="item" index="index" open="" close="" separator=";">
      update company_user_relation
      <set>
        is_responsible = #{item.isResponsible},
        gmt_modifed = #{item.gmtModifed}
      </set>
      where online_user_id = #{item.onlineUserId}
    </foreach>
    and is_delete = 0
  </update>

  
  
  <select id="selectByCompanyIdAndUserId" resultType="java.lang.Long">
    select id
      from
       company_user_relation
       where company_id=#{companyId}
          and online_user_id=#{userId}
          and is_delete = 0
  </select>

    <select id="selectResponsibleBycomId" resultType="java.lang.String">
       select a.user_name
          from online_user a,company_user_relation b
          where a.id=online_user_id
             and b.company_id=#{companyId}
              and b.is_responsible=1
              and is_delete = 0
    </select>
    <select id="selectcomIdByUserId">
        select company_id
           from company_user_relation
             where
               online_user_id=#{userId}
               and is_delete = 0
    </select>


  <!--通过onlineUserIdList查询所有-->
  <select id="selectUserRelationByOnlineUserIdList">
    SELECT
    <include refid="Base_Column_List" />
    from company_user_relation
    where online_user_id IN
    <foreach collection="onlineUserIdList" item="onlineUserId" open="(" separator="," close=")" index="index">
      #{onlineUserId}
    </foreach>
    AND is_delete = 0
  </select>

  <!--通过公司id找主负责人-->
  <select id="selectByCompanyId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from company_user_relation
    where company_id = #{companyId}
    AND is_founder = 1
    AND is_delete = 0
  </select>

  <!--查询商户公司信息，不用is_resposible加以限制，有可能当前用户既是负责人也是司机-->
  <select id="selectBossCompanyByUserId"  resultMap="MerchantCompany">
   SELECT mc.merchant_name,mc.social_info_code,mc.corporate_certification_url
   from company_user_relation as cur
   inner JOIN merchant_company as mc
   on cur.company_id=mc.id
   where   cur.online_user_id=#{onlineUserId}
   and cur.is_delete = 0
  </select>

  <!--查询员工所属公司信息-->
   <select id="selectEmployCompanyByUserId"  resultMap="MerchantCompany">
   SELECT mc.merchant_name,mc.social_info_code,mc.corporate_certification_url
   from company_user_relation as cur
   inner JOIN merchant_company as mc
   on cur.company_id=mc.id
   where   cur.online_user_id=#{onlineUserId}
   and cur.is_delete = 0
  </select>
  <resultMap type="com.snxy.business.domain.MerchantCompany" id="MerchantCompany">
      <result property="merchantName" column="merchant_name"/>
      <result property="socialInfoCode" column="social_info_code"/>
      <result property="corporateCertificationUrl" column="corporate_certification_url"/>
  </resultMap>

  <!--根据司机onlineUserId查询companyId-->
  <select id="selectCompanyIdByOnlineUserId" resultType="java.lang.Long">
     select cur.company_id
     from company_user_relation as cur
     where cur.online_user_id=#{onlineUserId}
     and cur.is_delete = 0
  </select>
  <!--商户负责人删除员工-->
  <delete id="deleteCompanyUserRelationByOnlineUserId" >
    delete from company_user_relation
    where online_user_id = #{onlineUserId,jdbcType=BIGINT}
    and is_responsible=0
  </delete>


  <!--根据onlineUserId在company_user_relation和online_user关联查询userName-->
  <select id="selectUserNameByOlineUserId" resultType="String">
     SELECT ou.user_name
    from company_user_relation as cur
    INNER JOIN online_user as ou
    on cur.online_user_id=ou.id
    where online_user_id=#{onlineUserId,jdbcType=BIGINT}
     and cur.is_delete = 0
  </select>

  <!--根据onlineUserId在company_user_relation和online_user关联查询phone-->
  <select id="selectPhoneByOnlineUserId" resultType="String">
     SELECT ou.phone
    from company_user_relation as cur
    INNER JOIN online_user as ou
    on cur.online_user_id=ou.id
    where online_user_id=#{onlineUserId,jdbcType=BIGINT}
     and cur.is_delete = 0
  </select>

</mapper>