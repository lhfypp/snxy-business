<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snxy.business.dao.mapper.VegetableDeliveryRelationMapper">
  <resultMap id="BaseResultMap" type="com.snxy.business.domain.VegetableDeliveryRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="delivery_order_id" jdbcType="BIGINT" property="deliveryOrderId" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_weight" jdbcType="INTEGER" property="goodsWeight" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, delivery_order_id, goods_id, goods_name, goods_weight, goods_price, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vegetable_delivery_relation
    where id = #{id,jdbcType=BIGINT}
  </select>

  <!--司机查询订单详情中物品GoodsInfo查询-->
  <resultMap id="GoodsInfo" type="com.snxy.business.domain.GoodsInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_weight" jdbcType="INTEGER" property="goodsWeight" />
  </resultMap>
  <select id="selectByOrderId" parameterType="java.lang.Long" resultMap="GoodsInfo">
    select goods_name,goods_weight
    from vegetable_delivery_relation
    where delivery_order_id = #{id,jdbcType=BIGINT}
  </select>

  <!--查询放入Goods888888888888888888888888-->
  <resultMap id="Goods" type="com.snxy.business.domain.Goods">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_weight" jdbcType="INTEGER" property="goodsWeight" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_price" jdbcType="INTEGER" property="goodsPrice" />
  </resultMap>
  <select id="selectAllByOrderId" parameterType="java.lang.Long" resultMap="Goods">
    select goods_name,goods_weight,goods_id,goods_price
    from vegetable_delivery_relation
    where delivery_order_id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vegetable_delivery_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.snxy.business.domain.VegetableDeliveryRelation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vegetable_delivery_relation (delivery_order_id, goods_id, goods_name, 
      goods_weight, goods_price, is_delete
      )
    values (#{deliveryOrderId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, 
      #{goodsWeight,jdbcType=INTEGER}, #{goodsPrice,jdbcType=DECIMAL}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>

  <insert id="insertGoodList" >
    insert into vegetable_delivery_relation (delivery_order_id, goods_id, goods_name,
    goods_weight, goods_price)
    values
      <foreach collection ="vegetableDeliveryRelationList" item="vegetableDeliveryRelation" separator =",">
        (
          #{vegetableDeliveryRelation.deliveryOrderId},
          #{vegetableDeliveryRelation.goodsId},
          #{vegetableDeliveryRelation.goodsName},
          #{vegetableDeliveryRelation.goodsWeight},
          #{vegetableDeliveryRelation.goodsPrice}
        )
      </foreach >
  </insert>

  <insert id="insertSelective" parameterType="com.snxy.business.domain.VegetableDeliveryRelation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vegetable_delivery_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deliveryOrderId != null">
        delivery_order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsWeight != null">
        goods_weight,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deliveryOrderId != null">
        #{deliveryOrderId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsWeight != null">
        #{goodsWeight,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.snxy.business.domain.VegetableDeliveryRelation">
    update vegetable_delivery_relation
    <set>
      <if test="deliveryOrderId != null">
        delivery_order_id = #{deliveryOrderId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsWeight != null">
        goods_weight = #{goodsWeight,jdbcType=INTEGER},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snxy.business.domain.VegetableDeliveryRelation">
    update vegetable_delivery_relation
    set delivery_order_id = #{deliveryOrderId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_weight = #{goodsWeight,jdbcType=INTEGER},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>